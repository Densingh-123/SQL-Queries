show databases;
use learn;
select * from employee;
desc employees;
alter table employees add name varchar(100);
alter table employees drop column name;
alter table employees rename to employee;
create database uber;
use uber;
create table rides(ride_id int,driver_id int not null,rider_id int not null,
pickUp_location varchar(100)not null,drop_location varchar(100) not null,price decimal(10,2)not null check (price>0) ,primary key(ride_id,rider_id));
select * from rides;
INSERT INTO rides (ride_id, driver_id, rider_id, pickUp_location, drop_location, price) 
VALUES 
    (3, 123, 145, 'chennai', 'madurai', 500.00),
    (7, 123, 135, 'chennai', 'kerla', 100.00),
    (8, 123, 125, 'chennai', 'kanyakumari',300.00);
select * from rides where price>200 and drop_location='madurai' order by price desc;
desc rides;
drop table rides;
show databases;
create table users (id int primary key,email varchar(100));
insert into users (id, email)value(1,'dens@gamil.com');
select * from users;
drop table if exists rides;
drop table if exists drivers;
CREATE TABLE drivers(
    driver_id INT PRIMARY KEY,
    driver_name VARCHAR(100),
    lisence VARCHAR(100) UNIQUE
);

CREATE TABLE rides(
    ride_id INT PRIMARY KEY,
    driver_id INT,  -- Removed UNIQUE constraint
    pickup_location VARCHAR(100),
    drop_location VARCHAR(100),
    price DECIMAL(10,2),
    FOREIGN KEY (driver_id) REFERENCES drivers(driver_id) on delete cascade
);

INSERT INTO drivers (driver_id, driver_name, lisence)
VALUES 
(11, 'Driver A', 'ABC123'),
(22, 'Driver B', 'DEF456'),
(33, 'Driver C', 'GHI789');

INSERT INTO rides (ride_id, driver_id, pickup_location, drop_location, price)
VALUES 
(1, 11, 'chennai', 'redhills', 500.20),
(2, 22, 'chennai', 'red', 300.20),
(3, 33, 'chennai', 'hills', 200.20);
delete from drivers where driver_id=11;


create table customer(
id int primary key auto_increment,
login_device varchar(50),
customer_name varchar(100),
ip_address varchar(50),
product varchar(40),
ammount decimal(10,2),
is_placed boolean,
is_viewed boolean,
transaction_status varchar(50) 
);
select * from customer;
drop table customer;
INSERT INTO customer (login_device, customer_name, ip_address, product, ammount, is_placed, is_viewed, transaction_status) VALUES
('Mobile', 'John Doe', '192.168.1.1', 'Laptop', 750.00, TRUE, TRUE, 'Completed'),
('Desktop', 'Alice Smith', '192.168.1.2', 'Smartphone', 500.00, FALSE, TRUE, 'Pending'),
('Tablet', 'Robert Brown', '192.168.1.3', 'Tablet', 300.00, TRUE, TRUE, 'Completed'),
('Laptop', 'Emily White', '192.168.1.4', 'Headphones', 120.00, TRUE, FALSE, 'Failed'),
('Mobile', 'Michael Johnson', '192.168.1.5', 'Smartwatch', 250.00, FALSE, TRUE, 'Pending'),
('Desktop', 'Sophia Davis', '192.168.1.6', 'Camera', 600.00, TRUE, TRUE, 'Completed'),
('Tablet', 'Daniel Wilson', '192.168.1.7', 'Gaming Console', 400.00, TRUE, FALSE, 'Failed'),
('Laptop', 'Olivia Martinez', '192.168.1.8', 'Monitor', 200.00, FALSE, TRUE, 'Pending'),
('Mobile', 'James Anderson', '192.168.1.9', 'Keyboard', 50.00, TRUE, TRUE, 'Completed'),
('Desktop', 'Isabella Thomas', '192.168.1.10', 'Mouse', 30.00, FALSE, TRUE, 'Pending'),
('Tablet', 'Benjamin Lee', '192.168.1.11', 'Speakers', 100.00, TRUE, FALSE, 'Failed'),
('Laptop', 'Charlotte Harris', '192.168.1.12', 'External HDD', 150.00, TRUE, TRUE, 'Completed'),
('Mobile', 'William Clark', '192.168.1.13', 'Power Bank', 80.00, FALSE, TRUE, 'Pending'),
('Desktop', 'Amelia Lewis', '192.168.1.14', 'Router', 120.00, TRUE, FALSE, 'Failed'),
('Tablet', 'Lucas Walker', '192.168.1.15', 'Printer', 350.00, TRUE, TRUE, 'Completed');
select count(*) from customer where  transaction_status='Failed' and product ='Emily White';
select count(*) from customer where transaction_status not in ('Completed','Pending');
select sum(ammount) as total_transaction from customer where transaction_status='Completed';
select min(ammount) as Min_Transaction from customer;
select max(ammount) as max_Ammount from customer;
select avg(ammount) as avg_Ammount from customer;
select login_device ,sum(ammount) as TotalSum from customer group by (login_device) having sum(ammount)>1000;
select customer_name, ammount,
 case
 when ammount>1000 then 'Heigh Spender' 
 when ammount between 500 and 900 then 'Normal Spender' 
 when ammount<=500 then ' Less spender' 
 else 'no data'
 end as spending from customer ;
 select customer_name ,
 case 
 when  ip_address is null then customer_name
 else  ip_address
 end as 'IP address'
 from customer
